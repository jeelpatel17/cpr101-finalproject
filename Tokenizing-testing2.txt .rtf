{\rtf1\ansi\ansicpg1252\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs32 \cf2 \expnd0\expndtw0\kerning0
#define _CRT_SECURE_NO_WARNINGS\
#define BUFFER_SIZE 300 \
#include "tokenizing.h"//include the header\
\'a0\
void tokenizing(void)\{\
\'a0char phrases[BUFFER_SIZE];//declare string words\
\'a0char* nextPhrase = NULL;//declare char pointer\
\'a0int phraseCounter;//declare int type\
\'a0printf("*** Start of Tokenizing Words Demo ***\\n");//changed from PNG. provided: move it after the declaration\
\'a0do\{\
\'a0 printf("Type a few words separated by space (q - to quit):\\n");//print statement\
\'a0 fgets(phrases, BUFFER_SIZE,stdin);//user indfput data\
\'a0 phrases[strlen(phrases)-1] = '\\0';\
\'a0 if (strcmp(phrases,"q")!=0)\{//loop "p" and quit then\
\'a0\'a0 nextPhrase = strtok(phrases," ");//function searches for a separator string within a larger string\
\'a0\'a0 phraseCounter = 1;//initialize wordsCounter to 1\
\'a0\'a0 while(nextPhrase)\{\
\'a0\'a0\'a0 printf("Phrase #%d is \\'%s\\'\\n", phraseCounter++, nextPhrase);//print statement\
\'a0\'a0\'a0 nextPhrase = strtok(NULL, " ");//get next word\
\'a0\'a0 \}\
\'a0 \}\
\'a0\}while(strcmp(phrases, "q")!=0);\
\'a0printf("*** End of Tokenizing Words Demo ***\\n\\n");\
\}\
\'a0\
int main()\{ //added void main to compile function\
tokenizing();\
\}\
\'a0\
\'a0\
\'a0\
\
\
\
\
\
\
\
\
\
\
\
\
TEST1\
Input: hello world i am Claire\
Output:\
\pard\pardeftab720\sl313\sa213\partightenfactor0

\fs29\fsmilli14667 \cf2 Type a few words separated by space (q - to quit):\
Phrase #1 is 'helhello'\
Phrase #2 is 'world'\
Phrase #3 is 'i'\
Phrase #4 is 'am'\
Phrase #5 is 'Claire'\
\
TEST2\
Input: study at Seneca college at CPP program\
Output:\
Type a few words separated by space (q - to quit):\
Phrase #1 is 'study'\
Phrase #2 is 'at'\
Phrase #3 is 'Seneca'\
Phrase #4 is 'college'\
Phrase #5 is 'at'\
Phrase #6 is 'CPP'\
Phrase #7 is 'program'\
\
TEST3\
Input: asdf qwer  ksjdhf 87734 sdjfh \
Output: \
Type a few words separated by space (q - to quit):\
Phrase #1 is 'asdf'\
Phrase #2 is 'qwer'\
Phrase #3 is 'ksjdhf'\
Phrase #4 is '87734'\
Phrase #5 is 'sdjfh'\
}